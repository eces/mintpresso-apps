GET     /                         controllers.Application.index

# API version 2 authentication
GET     /authorize                controllers.Application.authorize

GET     /order/:no/prepare       controllers.v2.Orders.prepare(no: Long)
GET     /order/:no/cancel        controllers.v2.Orders.cancel(no: Long)
GET     /pickup/:no/prepare      controllers.v2.Pickups.prepare(no: Long)
GET     /pickup/:no/cancel       controllers.v2.Pickups.cancel(no: Long)
GET     /private/:no.json        controllers.v2.Pickups.findOneByNo(no: Long)
#GET     /private/:no.xml         controllers.v2.Pickups.findOneByNo(no: Long)
GET     /public/:id.json         controllers.v2.Pickups.findOneById(id: String)
#GET     /public/:id.xml          controllers.v2.Pickups.findOneById(id: String)

# Internal API
GET     /types/:ownerNo           controllers.Application.findTypesByOwnerNo(ownerNo: Long)
GET     /verbs/:ownerNo           controllers.Application.findVerbsByOwnerNo(ownerNo: Long)

# Status(edge) API version 2
GET     /:sT/:v/:oT               controllers.v2.Edges.findAllByTypes(sT: String, v: String, oT: String, offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])
GET     /:sT/$sNo<[0-9]+>/:v/:oT  controllers.v2.Edges.findAllBySubjectNo(sT: String, sNo: Long, v: String, oT: String, offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])
GET     /:sT/:v/:oT/$oNo<[0-9]+>  controllers.v2.Edges.findAllByObjectNo(sT: String, v: String, oT: String, oNo: Long, offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])
GET     /:sT/:sId/:v/some/:oT     controllers.v2.Edges.findAllBySubjectId(sT: String, sId: String, v: String, oT: String, offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])
GET     /some/:sT/:v/:oT/:oId     controllers.v2.Edges.findAllByObjectId(sT: String, v: String, oT: String, oId: String, offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])

# accepts both $no and $id
GET     /:sT/:s/:v/:oT/:o        controllers.v2.Edges.findOne(sT: String, s: String, v: String, oT: String, o: String)

POST    /:sT/:s/:v/:oT/:o        controllers.v2.Edges.add(sT: String, s: String, v: String, oT: String, o: String)
DELETE  /status/:no              controllers.v2.Edges.delete(no: Long)

# Model(node) API version 2
GET     /:typeName               controllers.v2.Nodes.findAllByJson(typeName: String, json: Option[String], offset: Option[Long], limit: Option[Long], newest: Option[String], oldest: Option[String])
GET     /:typeName/$nodeNo<[0-9]+> controllers.v2.Nodes.findOneByNo(typeName: String, nodeNo: Long)
GET     /:typeName/:nodeId       controllers.v2.Nodes.findOneById(typeName: String, nodeId: String)
POST    /:typeName               controllers.v2.Nodes.add(typeName: String)
PUT     /:typeName/:nodeNo       controllers.v2.Nodes.addWithJson(typeName: String, nodeNo: Long)
DELETE  /:typeName/:nodeNo       controllers.v2.Nodes.delete(typeName: String, nodeNo: Long)

# /private/21304.json
# /public/canxan-users.json

GET     /assets/*file               controllers.Assets.at(path="/public", file)
